{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ComputePods The ComputePods Project provides the tools needed to distribute any simple embarrassingly parallelisable computational task (such as, but not limited to, compilation of source code) across multiple computers. A ComputePods \"pod\" is an coordinated collection of OCI containers. These ComputePods can be run rootless using Podman Pod (on a private collection of computers to which a user has access) or as a Kubernetes Pod (in a more specialised production environment). Each pod consists of: A NATS container used to provide inter/intra pod communication. A MajorDomo to coordinate the dependency analysis and subsequent \"build\". A collection of different Chef (worker) containers, one or more for each computational task. These chefs consist of a Python asyncio based controller process which pulls files from one or more pods as needed and then forks \"tasks\" consisting of any containerisable computational \"command line\" process. Suitably programmed computational tasks can interact with the NATS \"back-plane\" to initiate, and wait for sub-tasks to be run.","title":"ComputePods"},{"location":"#computepods","text":"The ComputePods Project provides the tools needed to distribute any simple embarrassingly parallelisable computational task (such as, but not limited to, compilation of source code) across multiple computers. A ComputePods \"pod\" is an coordinated collection of OCI containers. These ComputePods can be run rootless using Podman Pod (on a private collection of computers to which a user has access) or as a Kubernetes Pod (in a more specialised production environment). Each pod consists of: A NATS container used to provide inter/intra pod communication. A MajorDomo to coordinate the dependency analysis and subsequent \"build\". A collection of different Chef (worker) containers, one or more for each computational task. These chefs consist of a Python asyncio based controller process which pulls files from one or more pods as needed and then forks \"tasks\" consisting of any containerisable computational \"command line\" process. Suitably programmed computational tasks can interact with the NATS \"back-plane\" to initiate, and wait for sub-tasks to be run.","title":"ComputePods"},{"location":"documentation/","text":"All of the ComputePod projects based on Python use the mkdocs documentation generation tool. To install mkdocs type: pipx install mkdocs Plugins We use the mkdocs Material theme To install this theme type: pipx runpip mkdocs install mkdocs-material To provide a uniform configuration of the Material for MkDocs theme, we use the mkdocs-computePods-plugin To install this plugin type: pipx runpip mkdocs install git+https://github.com/computePods/mkdocs-computePods-plugin/ To help manage the automatic creation of mkdocs pages we use the Awesome Pages To install this plugin type: pipx runpip mkdocs install mkdocs-awesome-pages-plugin To document the python source code we use the mkdocstrings To install this plugin type: pipx runpip mkdocs install mkdocstrings To be able to draw diagrams using mermaid we use the mkdocs-mermaid2-plugin To install this plugin type: pipx runpip mkdocs install mkdocs-mermaid2-plugin Configuration We use the following mkdocs.yml configuration: site_name: <<the site name>> site_url: <<the site url>> repo_url: <<the repository url>> plugins: - search - compute-pods - awesome-pages - mermaid2 - mkdocstrings watch: - <<one or more source code directories to watch>> theme: name: material","title":"Documentation"},{"location":"documentation/#plugins","text":"We use the mkdocs Material theme To install this theme type: pipx runpip mkdocs install mkdocs-material To provide a uniform configuration of the Material for MkDocs theme, we use the mkdocs-computePods-plugin To install this plugin type: pipx runpip mkdocs install git+https://github.com/computePods/mkdocs-computePods-plugin/ To help manage the automatic creation of mkdocs pages we use the Awesome Pages To install this plugin type: pipx runpip mkdocs install mkdocs-awesome-pages-plugin To document the python source code we use the mkdocstrings To install this plugin type: pipx runpip mkdocs install mkdocstrings To be able to draw diagrams using mermaid we use the mkdocs-mermaid2-plugin To install this plugin type: pipx runpip mkdocs install mkdocs-mermaid2-plugin","title":"Plugins"},{"location":"documentation/#configuration","text":"We use the following mkdocs.yml configuration: site_name: <<the site name>> site_url: <<the site url>> repo_url: <<the repository url>> plugins: - search - compute-pods - awesome-pages - mermaid2 - mkdocstrings watch: - <<one or more source code directories to watch>> theme: name: material","title":"Configuration"}]}